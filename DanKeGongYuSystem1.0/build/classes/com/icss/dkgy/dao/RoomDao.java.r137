/**  
* <p>Title: RoomDao.java</p>  
* <p>Description: </p>   
* <p>Company: icss.205.class</p>  
* @author 任广伟 
* @date 2018年10月29日  
* @version 1.0  
*/
package com.icss.dkgy.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.icss.dkgy.entity.RoomEntity;


// badac acd
/**  
 * @Title: RoomDao
 * @Description:
 * @author 任广伟
 * @createTime 2018年10月29日下午4:07:16
 */
public class RoomDao extends BaseDao{

	/**  
	 * @Title: searchText
	 * @Description:
	 * @author 任广伟 
	 * @param text
	 * @return  
	 * @date 2018年10月30日下午4:52:43
	 */
	public ArrayList<RoomEntity> searchText(String text)throws Exception {
				//1打开连接
				openConnection();
				//2创建预编译对象
				String sql = "select *from room where comment like ?";
				
				PreparedStatement pst =  this.conn.prepareStatement(sql);
				pst.setString(1,"%"+text+"%");
				
				//3执行操作，并拿到结果集conn.prepareStatement(sql);
				ResultSet rs = pst.executeQuery();
				//4处理结果集
				ArrayList<RoomEntity> rooms = new ArrayList<RoomEntity>();//创建集合对象，用来存储图书信息
				RoomEntity room = null;
				while (rs.next()) {
					room =new RoomEntity();
					room.setRoomnum(rs.getInt("roomnum"));
					room.setAddress(rs.getString("address"));
					room.setPrice(rs.getDouble("price"));
					room.setArea(rs.getDouble("area"));
					room.setTypeid(rs.getInt("typeid"));
					room.setPaymethod(rs.getString("paymethod"));
					room.setStatus(rs.getString("status"));
					room.setSubway(rs.getString("subway"));
					room.setImgpath(rs.getString("imgpath"));
					room.setOwnerid(rs.getString("ownerid"));
					//room.setRentdate(rs.getTimestamp("rentdate"));
					room.setComment(rs.getString("comment"));
					rooms.add(room);
					 
					
					}
				return rooms;
	}

	/**  
	 * @Title: findRoomDetail
	 * @Description:
	 * @author 任广伟
	 * @param roomid
	 * @return  
	 * @date 2018年11月3日上午9:13:02
	 */
	public ArrayList<RoomEntity> findRoomDetail(int roomid)throws Exception{
		//1打开连接
		openConnection();
		//2创建预编译对象
		String sql = "select *from t_book where roomid =?";
		PreparedStatement pst = conn.prepareStatement(sql);
		pst.setInt(1, roomid);
		//3执行操作，并拿到结果集
		ResultSet rs = pst.executeQuery();
		//4处理结果集
		ArrayList<RoomEntity>rooms = new ArrayList<RoomEntity>();//创建集合对象，用来存储图书信息
		RoomEntity room = null;
		while (rs.next()) {
			room = new RoomEntity();
			room.setRoomnum(rs.getInt("roomnum"));
			room.setAddress(rs.getString("address"));
			room.setPrice(rs.getDouble("price"));
			room.setArea(rs.getDouble("area"));
			room.setTypeid(rs.getInt("typeid"));
			room.setPaymethod(rs.getString("paymethod"));
			room.setStatus(rs.getString("status"));
			room.setSubway(rs.getString("subway"));
			room.setImgpath(rs.getString("imgpath"));
			room.setOwnerid(rs.getString("ownerid"));
			//room.setRentdate(rs.getTimestamp("rentdate"));
			room.setComment(rs.getString("comment"));
			rooms.add(room);
		}
		
		return rooms;
	}

	/**  
	 * @Title: collectroom
	 * @Description:
	 * @author 任广伟
	 * @param roomid
	 * @return  
	 * @date 2018年11月3日下午3:27:43
	 */
	public boolean collectroom(int roomid)throws Exception {
		// 1、打开连接
		openConnection();
		// 2、创建预编译对象
		String sql = "update t_carshop set count = count + 1";
		PreparedStatement pst = conn.prepareStatement(sql);
		
		// 3、执行操作
		int flag = pst.executeUpdate();
		
		return false;
	}
	
	/**
	 * 查看所有房源信息
	 * @throws Exception 
	 */
	public ArrayList<RoomEntity> findAllRoom() throws Exception {
		//1、打开连接
		openConnection();
		//2、创建预编译对象
		String sql = "select * from room";
		PreparedStatement pst = conn.prepareStatement(sql);
		// 3.执行操作，并拿到结果集
		ResultSet rs = pst.executeQuery();
		// 4.处理结果集
		ArrayList<RoomEntity> rooms = new ArrayList<RoomEntity>();
		RoomEntity room = null;
		while (rs.next()) {
			room = new RoomEntity();
			room.setAddress(rs.getString("address"));
			room.setArea(rs.getDouble("area"));
			room.setComment(rs.getString("comment"));
			room.setImgpath(rs.getString("imgpath"));
			room.setOwnerid(rs.getString("ownerid"));
			room.setPaymethod(rs.getString("paymethod"));
			room.setPrice(rs.getDouble("price"));
			room.setRentdate(rs.getTimestamp("rentdate"));
			room.setStatus(rs.getString("status"));
			room.setSubway(rs.getString("subway"));
			room.setTypeid(rs.getInt("typeid"));	
			rooms.add(room);
		}
		
		return rooms;
	}


	/**
	 * 分页查询所有房屋信息
	 * @throws Exception 
	 */
	public ArrayList<RoomEntity> getRoomInfo(int startPage, int pagesize) throws Exception {
		// 1、打开连接
				openConnection();
				// 2、创建预编译对象
				String sql = "select * from room limit ?,? ";
				PreparedStatement pst = conn.prepareStatement(sql);
				pst.setInt(1, startPage);
				pst.setInt(2, pagesize);
				// 3、执行操作,并拿到结果集
				ResultSet rs = pst.executeQuery();
				// 4、处理结果集
				ArrayList<RoomEntity> rooms = new ArrayList<RoomEntity>(); // 创建集合对象，用来存储图书信息
				RoomEntity room = null;
				while (rs.next()) {
					room = new RoomEntity();
					room.setAddress(rs.getString("address"));
					room.setArea(rs.getDouble("area"));
					room.setComment(rs.getString("comment"));
					room.setOwnerid(rs.getString("ownerid"));
					room.setPaymethod(rs.getString("paymethod"));
					room.setPrice(rs.getDouble("price"));
					room.setStatus(rs.getString("status"));
					room.setRoomnum(rs.getInt("roomnum"));
					room.setTypeid(rs.getInt("typeid"));
					room.setRentdate(rs.getTimestamp("rentdate"));
					room.setSubway(rs.getString("subway"));	
					room.setImgpath(rs.getString("imgpath"));
					rooms.add(room);
				}
				return rooms;
	}

	/**
	 * 查询房屋的总数
	 * @throws Exception 
	 */
	public int selectCount() throws Exception {
		// 2、创建预编译对象
		String sql = "select count(*) from room ";
		PreparedStatement pst = conn.prepareStatement(sql);
		ResultSet rs = pst.executeQuery();
		int totalCount=0;
		while(rs.next()){
			totalCount = rs.getInt(1);
		}
		return totalCount;
	}

	/**  
	 * @Title: findRoomDetail
	 * @Description: 查看图书详情
	 * @author 任广伟
	 * @return  
	 * @date 2018年11月3日下午7:47:42
	 */
	public ArrayList<RoomEntity> findRoomDetail() throws Exception{
		//1、打开连接
				openConnection();
				//2、创建预编译对象
				String sql = "select * from room";
				PreparedStatement pst = conn.prepareStatement(sql);
				// 3.执行操作，并拿到结果集
				ResultSet rs = pst.executeQuery();
				// 4.处理结果集
				ArrayList<RoomEntity> rooms = new ArrayList<RoomEntity>();
				RoomEntity room = null;
				while (rs.next()) {
					room = new RoomEntity();
					room.setAddress(rs.getString("address"));
					room.setArea(rs.getDouble("area"));
					room.setComment(rs.getString("comment"));
					room.setImgpath(rs.getString("imgpath"));
					room.setOwnerid(rs.getString("ownerid"));
					room.setPaymethod(rs.getString("paymethod"));
					room.setPrice(rs.getDouble("price"));
					room.setRentdate(rs.getTimestamp("rentdate"));
					room.setStatus(rs.getString("status"));
					room.setSubway(rs.getString("subway"));
					room.setTypeid(rs.getInt("typeid"));	
					rooms.add(room);
				}
				
				return rooms;
	}


}













